# Root = owner Country of the Law
# Executed when the end of a checkpoint is reached and the result is debate
on_law_checkpoint_debate = {
	events = {
		palaiologos_events.1
		palaiologos_events.2
		palaiologos_events.3
		palaiologos_events.4
	}
}

on_monthly_pulse_country = {
	on_actions = {
		romaioi_monthly_pulse
		chariot_racing_pulse_1
		chariot_racing_pulse_2
	}
}

on_monthly_pulse_country = {
	events = {
		new_homelands.1
	}
}

romaioi_monthly_pulse = {
	trigger = {
		OR = {
			exists = c:BYZ
		}
	}
	events = {
		#pentarchy.1  # restoration of the patriarchate
	}
	random_events = {
		100 = 0
	}
	effect = {
		if = {
			limit = {
				has_variable =  byzfm_held_chariot_races
			}
			change_variable = {
				name = byzfm_held_chariot_races
				add = -1
			}
			clamp_variable = { # just to avoid outlandish values
				name = byzfm_held_chariot_races
				max = 48 
				min = 0 
			}
		}
	}
}

chariot_racing_pulse_1 = {
	trigger = {
		has_modifier = modifier_chariot_racing
		has_variable = byzfm_held_chariot_races
		var:byzfm_held_chariot_races < 1
	}
	random_events = {
		20 = chariot_racing.50 # reds win
		20 = chariot_racing.51 # whites win
		20 = chariot_racing.52 # greens win
		20 = chariot_racing.53 # blues win
		10 = chariot_racing.56 # first match complete, crowd calls for diversum
		 5 = chariot_racing.57 # sporting riot
		 1 = chariot_racing.58 # ruler tries to join race
		 1 = chariot_racing.59 # team gets caught cheating
	}
}

chariot_racing_pulse_2 = {
	trigger = {
		has_modifier = modifier_expanded_chariot_racing
		has_variable = byzfm_held_chariot_races
		var:byzfm_held_chariot_races < 1
	}
	random_events = {
		25 = chariot_racing.50 # reds win - industrialists
		25 = chariot_racing.51 # whites win - intel
		25 = chariot_racing.52 # greens win - rural folk
		25 = chariot_racing.53 # blues win - petite
		25 = chariot_racing.54 # purples win - landowners
		25 = chariot_racing.55 # golds win - trade unions
		15 = chariot_racing.56 # first match complete, crowd calls for diversum
		 5 = chariot_racing.57 # sporting riot
		 5 = chariot_racing.58 # ruler tries to join race
		 1 = chariot_racing.59 # team gets caught cheating
	}
}

on_law_activated = {
}

# Root = Character
# on_new_ruler = { #it is the same in the vanilla file and because it is done dubble will give an error
# 	effect = {
# 		if = {
# 			limit = {
# 				owner = {
# 					NOT = {
# 						has_variable = hide_ruler_change_notification
# 					}
# 				}
# 			}
# 			post_notification = new_ruler
# 		}
# 	}
# }

on_election_campaign_end = {
}

on_monthly_pulse_country = {
	events = {
		br_slave_event.1
	}
}

on_revolution_start = { on_actions = { br_ig_on_action } }
on_secession_start = { on_actions = { br_ig_on_action } }
on_country_released_as_own_subject = { on_actions = { br_ig_on_action } }
on_country_released_as_overlord_subject = { on_actions = { br_ig_on_action } }
on_country_released_as_independent = { on_actions = { br_ig_on_action } }

br_ig_on_action = {
	effect = {
		scope:target ?= { 
			br_apply_ideologies_and_traits = yes		
		}
	}
}

br_oa_var_debug_silencer = { #oa is on action
	trigger = {
		##BR variables
		has_variable = is_byz_gen1
		has_variable = is_byz_gen2
		has_variable = is_byz_gen3
		has_variable = br_balkan_warcrime_victim
		has_variable = br_side_rus_progress_var
		has_variable = br_irish_has_english_migration_variable
		# has_variable = br_requesting_state
		has_variable = br_successfully_demanded_state
		has_variable = br_enbraced_roman_identity_var
		has_variable = completed_palaiologos_reforms_navy_je

		##Vanilla variables
		has_variable = sino_japanese_war
		has_variable = haiti_stops_paying_france_aggressor
		has_variable = haiti_stops_paying_france_target
		has_variable = positivism_happened

		has_variable = eocfm_window_is_active_var
	}
	effect = {
		##BR variables
		set_local_variable = br_already_has_irish_migration_variable
		set_local_variable = br_revolution_timeout_var #var that does not exit so that the condition is not checked

		##Vanilla variables
		set_local_variable = owned_by_pan_nationalist_radicals
		set_local_variable = sulistas_integrated
		set_local_variable = fra_republic_counter
		set_local_variable = china_warlord_explosion
		set_local_variable = national_identity_progress_var
		set_local_variable = national_liberation_alliance_variable
		set_local_variable = caudillo_communist
		set_local_variable = caudillo_conservative
		set_local_variable = caudillo_fascist
		set_local_variable = caudillo_liberal
		set_local_variable = francocracia_paraguay_var
		set_local_variable = patino_paraguay_var
		set_local_variable = district_of_columbia
		set_local_variable = greater_commonwealth_var
		set_local_variable = rsm_friendship
		set_local_variable = risorgimento_anti_unifying_stance
		set_local_variable = algeria_constantine_var
		set_local_variable = algeria_mascara_var
		set_local_variable = algeria_ait_abbas_var
		set_local_variable = algeria_touggourt_var
		set_local_variable = garibaldi_is_alive_global_var
		set_local_variable = john_frost_var
		set_local_variable = is_pedro
		set_local_variable = bismarck_variable
		set_local_variable = je_amazonas_complete_variable
		set_local_variable = cant_touch_this_achievement_possible
		set_local_variable = risorgimento_unifying_stance
		set_local_variable = ismail_var
		set_local_variable = hawduqo_var
		set_local_variable = east_indies_revolt_var
		set_local_variable = labour_movement_researched
	}
}

br_oa_event_debug_silencer = {
	effect = {
		#BR events should best be orphaned manually (orphan = yes #not yet in use) in the event it self, 
		#that way an error is given when the event is eventualy used and then it can be deorphaned.
		#example: (poland.5 is scripted as an orphan, but has callers)

		##Vanilla events which are orphaned by overwriting vanilla code, they are triggered here to prevent an orphan error
		trigger_event = { id = greece.1 }
		trigger_event = { id = greece.2 }
		trigger_event = { id = native_resettlement.1 }
		trigger_event = { id = sick_man.1 }
		trigger_event = { id = acw_events.9 }
		trigger_event = { id = caucasuswar.5 }
		trigger_event = { id = kazakhstan_events.2 }
		trigger_event = { id = persia_events.5 }
	}
}