# A revolution is brewing
je_hre_impending_revolution = {

	icon = "gfx/interface/icons/event_icons/event_election.dds"
	
	group = je_group_internal_affairs

	scripted_progress_bar = br_hre_impending_revolution_progress_bar
	scripted_progress_bar = br_hre_impending_revolution_1de_estate_progress_bar
	scripted_progress_bar = br_hre_impending_revolution_2de_estate_progress_bar
	scripted_progress_bar = br_hre_impending_revolution_3de_estate_progress_bar

	is_shown_when_inactive = {
		and = {
			exists = c:HRE
			root = c:HRE
		}
	}

	possible = {
		and = {
			exists = c:HRE
			root = c:HRE
		}
	}

	immediate = {
		#make vanilla revolution imposible
		set_immune_to_revolutions = yes

		#set variables
		set_variable = {
			name = br_monarchy_popularity_var
			value = 0
		}

		#add revolution modifiers
		add_modifier = {
			name = br_modifier_unreliable_food_security
			months = -1
		}
		add_modifier = {
			name = br_modifier_unpopular_regime
			months = -1
		}
		add_modifier = {
			name = br_modifier_antiquated_regime
			months = -1
		}

		##Create the estates
		br_create_estates_for_revolution_scripted_effect = yes

		##Set the Imperial Residence
		#set the current imperial residence initialy on palais de la cité
		br_set_imperial_residence_to_building_type_in_state_scripted_effect = {
			BUILDING_TYPE = br_building_palais_de_la_cite
		}
		#set the original imperial residence so we know which one was the original
		br_set_original_imperial_residence_scripted_effect = {
			BUILDING_TYPE = br_building_palais_de_la_cite
		}
		

		trigger_event = { 
			id = hre_revolution_events.1
			popup = yes
		}
		add_journal_entry = {
			type = je_revolution_reform
		}
		add_journal_entry = {
			type = je_revolution_suppress
		}
	}

	on_weekly_pulse = {
		effect = {
			if = {
				limit = {
					any_scope_pop = {
						food_security <= br_impending_revolution_food_security_threshold
						percent >= br_impending_revolution_food_security_population_percentage_threshold
					}
					not = { has_variable = br_hre_impending_revolution_low_food_security_timeout_var }
				}
				trigger_event = {
					id = hre_revolution_events.5
					days = 10
					popup = yes
				}
			}

			#update monarchy popularity popularity 
			change_variable = {
				name = br_monarchy_popularity_var
				add = br_monarchy_popularity_change_value
			}
		}
	}

	custom_completion_header = br_je_hre_impending_revolution_completion_header

	complete = {
		custom_tooltip = {
			text = finished_revolution_tt
			has_variable = br_impending_revolution_complete_var
		}
	}

	on_complete = {
		# trigger_event = {
		# 	id = hre_revolution_events.2
		# 	popup = yes
		# }

		# hidden_effect = {
		# 	set_variable = br_impending_revolution_complete_var
		# }
		add_journal_entry = {
			type = je_national_identity
		}
	}

	custom_failure_header = br_je_hre_impending_revolution_failure_header

	fail = {
		OR = {
			has_law = law_type:law_presidential_republic
			custom_tooltip = {
				text = if_journal_timeout_tt
				has_variable = br_revolution_timeout_var #var that does not exit so that the condition is not checked
			}

			#The revolution progress has reached 100%
			br_hre_has_max_revolution_progress_scripted_trigger = yes
		}
	}
	
	# custom_on_failure_header = br_je_hre_impending_revolution_on_failure_header

	on_fail = {
		br_revolution_errupts_scripted_effect = yes
	}

	timeout = 18250  #50 years

	#on_timeout the revolution happens
	on_timeout = {
		br_revolution_errupts_scripted_effect = yes
	}

	weight = 10000

	should_be_pinned_by_default = yes
}

# reform the state
je_revolution_reform = {

	group = je_group_internal_affairs

	icon = "gfx/interface/icons/event_icons/event_military.dds"

	complete = {
		NOT = {
			has_law = law_type:law_autocracy
			has_law = law_type:law_oligarchy
			has_law = law_type:law_landed_voting
			has_law = law_type:law_hereditary_bureaucrats
			has_law = law_type:law_serfdom
			has_law = law_type:law_traditionalism
			has_modifier = br_modifier_noble_privileges
			has_modifier = br_modifier_feudalism
		}
	}

	on_complete = {
		trigger_event = {
			id = hre_revolution_events.3
			popup = no
		}
		add_modifier = {
			name = br_modifier_peoples_monarchy
			years = -1
		}
		#remove_modifier = br_modifier_noble_privileges
	}

	invalid = {
		custom_tooltip = {
			text = finished_revolution_tt
			has_variable = br_impending_revolution_complete_var
		}
	}

	weight = 8000

	#should_be_pinned_by_default = yes
}

# Suppress the revolution
je_revolution_suppress = {

	group = je_group_internal_affairs

	icon = "gfx/interface/icons/event_icons/event_military.dds"

	complete = {
		has_law = law_type:law_autocracy
		has_law = law_type:law_censorship
		OR = {
			has_law = law_type:law_national_guard
			has_law = law_type:law_professional_army
		}
		NOT = {
			has_law = law_type:law_peasant_levies
		}
		ig:ig_landowners = {
			is_powerful = yes
			is_in_government = yes
		}
		ig:ig_armed_forces = {
			is_powerful = yes
			is_in_government = yes
		}
	}

	on_complete = {
		trigger_event = {
			id = hre_revolution_events.4
			popup = no
		}
		add_modifier = {
			name = br_modifier_heir_of_augustus
			years = -1
		}
		#remove_modifier = br_modifier_noble_privileges
	}

	invalid = {
		custom_tooltip = {
			text = finished_revolution_tt
			has_variable = br_impending_revolution_complete_var
		}
	}

	weight = 8000

	#should_be_pinned_by_default = yes
}

# The actual revolution
# je_hre_revolution = {

# 	group = je_group_internal_affairs

# 	icon = "gfx/interface/icons/event_icons/event_military.dds"

# 	scripted_progress_bar = br_hre_revolution_progress_bar

# 	is_shown_when_inactive = {
# 		c:HRE = this
# 	}

# 	possible = {
# 		c:HRE = this
# 	}

# 	complete = {

# 	}

# 	on_complete = {
# 		trigger_event = {
# 			id = hre_revolution_events.4
# 			popup = no
# 		}
# 		add_modifier = {
# 			name = br_modifier_heir_of_augustus
# 			years = -1
# 		}
# 		#remove_modifier = br_modifier_noble_privileges
# 	}

# 	invalid = {
# 		custom_tooltip = {
# 			text = finished_revolution_tt
# 			has_variable = br_impending_revolution_complete_var
# 		}
# 	}

# 	weight = 8000

# 	should_be_pinned_by_default = yes
# }