identity_br_holy_roman_empire = {
	power_bloc_modifier = {
		#power_bloc_customs_union_bool = yes
		power_bloc_leader_can_make_subjects_bool = yes
		power_bloc_mandate_progress_per_great_power_member_add = 10
		power_bloc_mandate_progress_per_major_power_member_add = 5
		power_bloc_mandate_progress_per_minor_power_member_add = 2
		power_bloc_mandate_progress_per_unrecognized_major_power_member_add = 2
		power_bloc_mandate_progress_per_unrecognized_regional_power_member_add = 1
		power_bloc_invite_acceptance_great_power_add = -2000
		power_bloc_invite_acceptance_major_power_add = -1000
		power_bloc_invite_acceptance_unrecognized_major_power_add = -10
		power_bloc_invite_acceptance_add = -50
		power_bloc_cohesion_per_member_add = -1
	}

	leader_modifier = {
		country_liberty_desire_of_subjects_add = -0.05
		country_prestige_add = 100
	}

	non_leader_modifier = {
		country_join_power_bloc_member_in_defensive_plays_bool = yes #Emperor can be forced to defend the Empire
	}

	member_modifier = {	
	}
	
	possible = {
		has_modifier = br_modifier_holy_roman_emperor
	}

	can_leave = {
		OR = {
			is_power_bloc_leader = yes
			power_bloc = {
				leverage_advantage = {
					target = root
					value <= 75
				}
			}
		}
	}

	icon = "gfx/interface/icons/central_identity_pillars_icons/sovereign_empire.dds"
	background = "gfx/interface/power_blocs/backgrounds/pb_background_generic.dds"

	visible = {
		has_dlc_feature = power_bloc_features
	}

	mandate_progress = power_bloc_mandate_progress_by_rank
	
	on_created = { relations_hit_with_power_bloc_leaders = yes }
	
	cohesion = {
		add = {
			add = 0.3
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			desc = POWER_BLOC_COHESION_BASE
		}
	
		add = {
			if = {
				limit = { exists = scope:with_country }
				add = "power_bloc_share_prestige_with(scope:with_country)"
			}
			else_if = {
				limit = { exists = scope:without_country }
				add = "power_bloc_share_prestige_without(scope:without_country)"
			}
			else = {
				add = power_bloc_share_prestige
			}
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			desc = POWER_BLOC_COHESION_SHARE_PRESTIGE
		}
		
		add = {
			if = {
				limit = { exists = scope:with_country }
				add = "scope:power_bloc.power_bloc_worst_leader_relations_with(scope:with_country)"
			}
			else_if = {
				limit = { exists = scope:without_country }
				add = "scope:power_bloc.power_bloc_worst_leader_relations_without(scope:without_country)"
			}
			else = {
				add = scope:power_bloc.power_bloc_worst_leader_relations
			}
			divide = define:NDiplomacy|MIN_RELATIONS
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			multiply = -1
			max = 0
			desc = POWER_BLOC_COHESION_WORST_LEADER_RELATIONS
		}
		
		add = {
			if = {
				limit = { exists = scope:with_country }
				add = "scope:power_bloc.power_bloc_worst_liberty_desire_with(scope:with_country)"
			}
			else_if = {
				limit = { exists = scope:without_country }
				add = "scope:power_bloc.power_bloc_worst_liberty_desire_without(scope:without_country)"
			}
			else = {
				add = scope:power_bloc.power_bloc_worst_liberty_desire
			}
			divide = 200 # liberty desire max value * 2
			multiply = -1
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			desc = POWER_BLOC_COHESION_WORST_LIBERTY_DESIRE
		}
	}
	
	ai_weight = {
		value = 0
		
		if = {
			limit = {
				ig:ig_landowners ?= { is_in_government = yes }
			}
			add = 100
		}		
		
		add = {
			value = num_subjects
			multiply = 25
			max = 250
		}
		
		if = {
			limit = {
				has_strategy = ai_strategy_colonial_expansion
			}
			
			multiply = 2.0
		}		
	}
}
