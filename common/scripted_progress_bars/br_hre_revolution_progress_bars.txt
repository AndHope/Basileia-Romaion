 ### For je_hre_revolution
 br_hre_impending_revolution_progress_bar = {
	name = "br_hre_impending_revolution_progress_bar"
	desc = "br_hre_impending_revolution_progress_bar_desc"

	default = yes

	is_inverted = yes

	#For some reason I can't give it a scripted value or a variable
	start_value = 0 #br_hre_impending_revolution_progress_bar_start_value
	min_value = 0 #br_hre_impending_revolution_progress_bar_min_value
	max_value = 100 #br_hre_impending_revolution_progress_bar_max_value	#represents a percentage

	monthly_progress = {
		if = {
			limit = {
				radical_population_fraction >= br_impending_revolution_radicals_threshold
			}
			add = {
				desc = "br_impending_revolution_to_many_redicals_loc"
				value = br_impending_revolution_radicals_change_revoluion_progress_value
			}
		}
		if = {
			limit = {
				loyalist_fraction = {
					value >= br_impending_revolution_loyalist_threshold
				}
			}
			add = {
				desc = "br_impending_revolution_to_many_loyalists_loc"
				value = br_impending_revolution_loyalist_change_revoluion_progress_value
			}
		}
		if = {
			limit = {
				has_variable = br_monarchy_popularity_var
			}
			add = {
				desc = "br_impending_revolution_monarchy_popularity_revolution_progress_change_loc"
				value = var:br_monarchy_popularity_var
				multiply = -1 #invert the sign because pos popularity has the decrease revolution progress
				multiply = br_monarchy_popularity_to_revolution_progress_multiplier
			}
		}
		if = {
			limit = {
				has_variable = br_1de_estate_var
			}
			add = {
				desc = "br_impending_revolution_1de_estate_disatisfaction_revolution_progress_change_loc"
				value = var:br_1de_estate_var.var:br_estate_disatisfaction_var
				multiply = br_1de_estate_disatisfaction_to_revolution_progress_multiplier
			}
		}
		if = {
			limit = {
				has_variable = br_2de_estate_var
			}
			add = {
				desc = "br_impending_revolution_2de_estate_disatisfaction_revolution_progress_change_loc"
				value = var:br_2de_estate_var.var:br_estate_disatisfaction_var
				multiply = br_2de_estate_disatisfaction_to_revolution_progress_multiplier
			}
		}
		if = {
			limit = {
				has_variable = br_3de_estate_var
			}
			add = {
				desc = "br_impending_revolution_3de_estate_disatisfaction_revolution_progress_change_loc"
				value = var:br_3de_estate_var.var:br_estate_disatisfaction_var
				multiply = br_3de_estate_disatisfaction_to_revolution_progress_multiplier
			}
		}
	}
 }

  br_hre_impending_revolution_1de_estate_progress_bar = {
	name = "br_hre_impending_revolution_1de_estate_progress_bar"
	desc = "br_hre_impending_revolution_1de_estate_progress_bar_desc"

	default = yes

	is_inverted = yes

	#For some reason I can't give it a scripted value or a variable
	start_value = 0 #br_hre_impending_revolution_1de_estate_progress_bar_start_value
	min_value = 0 #br_hre_impending_revolution_1de_estate_progress_bar_min_value
	max_value = 100 #br_hre_impending_revolution_1de_estate_progress_bar_max_value	#represents a percentage

	monthly_progress = {
		if = {
			limit = {
				radical_population_fraction >= br_impending_revolution_radicals_threshold
			}
			add = {
				desc = "br_impending_revolution_to_many_redicals_loc"
				value = br_impending_revolution_radicals_change_revoluion_progress_value
			}
		}
		if = {
			limit = {
				loyalist_fraction = {
					value >= br_impending_revolution_loyalist_threshold
				}
			}
			add = {
				desc = "br_impending_revolution_to_many_loyalists_loc"
				value = br_impending_revolution_loyalist_change_revoluion_progress_value
			}
		}

		
		#population_below_expected_sol

		# if = {
		# 	limit = {
		# 		any_scope_pop = {
		# 			food_security >= 0.5
		# 		}
		# 	}
		# 	trigger_event = {
		# 		id = hre_revolution_events.5
		# 		popup = yes
		# 	}
		# }
		
		#Feudalism laws effect
		if = {
			limit = {
				has_law = law_type:br_law_feudalism_enforced
			}
			add = {
				desc = "br_impending_revolution_has_feudalism_enforced_loc"
				value = br_impending_revolution_has_feudalism_enforced_change_in_1de_estate_disatisfaction_value
			}
		}
		else_if = {
			limit = {
				has_law = law_type:br_law_feudalism_codified
			}
			add = {
				desc = "br_impending_revolution_has_feudalism_codified_loc"
				value = br_impending_revolution_has_feudalism_codified_change_in_1de_estate_disatisfaction_value
			}
		}
		else_if = {
			limit = {
				has_law = law_type:br_law_feudalism_not_enforced
			}
			add = {
				desc = "br_impending_revolution_has_feudalism_not_enforced_loc"
				value = br_impending_revolution_has_feudalism_not_enforced_change_in_1de_estate_disatisfaction_value
			}
		}
		else_if = {
			limit = {
				has_law = law_type:br_law_feudalism_affirmative_action
			}
			add = {
				desc = "br_impending_revolution_has_feudalism_affirmative_action_loc"
				value = br_impending_revolution_has_feudalism_affirmative_action_change_in_1de_estate_disatisfaction_value
			}
		}
	}
 }

  br_hre_impending_revolution_2de_estate_progress_bar = {
	name = "br_hre_impending_revolution_2de_estate_progress_bar"
	desc = "br_hre_impending_revolution_2de_estate_progress_bar_desc"

	default_green = yes

	is_inverted = yes

	#For some reason I can't give it a scripted value or a variable
	start_value = 0 #br_hre_impending_revolution_2de_estate_progress_bar_start_value
	min_value = 0 #br_hre_impending_revolution_2de_estate_progress_bar_min_value
	max_value = 100 #br_hre_impending_revolution_2de_estate_progress_bar_max_value	#represents a percentage

	monthly_progress = {
		if = {
			limit = {
				radical_population_fraction >= br_impending_revolution_radicals_threshold
			}
			add = {
				desc = "br_impending_revolution_to_many_redicals_loc"
				value = br_impending_revolution_radicals_change_revoluion_progress_value
			}
		}
		if = {
			limit = {
				loyalist_fraction = {
					value >= br_impending_revolution_loyalist_threshold
				}
			}
			add = {
				desc = "br_impending_revolution_to_many_loyalists_loc"
				value = br_impending_revolution_loyalist_change_revoluion_progress_value
			}
		}

		
		#population_below_expected_sol

		# if = {
		# 	limit = {
		# 		any_scope_pop = {
		# 			food_security >= 0.5
		# 		}
		# 	}
		# 	trigger_event = {
		# 		id = hre_revolution_events.5
		# 		popup = yes
		# 	}
		# }
		
		#Feudalism laws effect
		if = {
			limit = {
				has_law = law_type:br_law_feudalism_enforced
			}
			add = {
				desc = "br_impending_revolution_has_feudalism_enforced_loc"
				value = br_impending_revolution_has_feudalism_enforced_change_in_2de_estate_disatisfaction_value
			}
		}
		else_if = {
			limit = {
				has_law = law_type:br_law_feudalism_codified
			}
			add = {
				desc = "br_impending_revolution_has_feudalism_codified_loc"
				value = br_impending_revolution_has_feudalism_codified_change_in_2de_estate_disatisfaction_value
			}
		}
		else_if = {
			limit = {
				has_law = law_type:br_law_feudalism_not_enforced
			}
			add = {
				desc = "br_impending_revolution_has_feudalism_not_enforced_loc"
				value = br_impending_revolution_has_feudalism_not_enforced_change_in_2de_estate_disatisfaction_value
			}
		}
		else_if = {
			limit = {
				has_law = law_type:br_law_feudalism_affirmative_action
			}
			add = {
				desc = "br_impending_revolution_has_feudalism_affirmative_action_loc"
				value = br_impending_revolution_has_feudalism_affirmative_action_change_in_2de_estate_disatisfaction_value
			}
		}

		#Chruch and State laws effect
		if = {
			limit = {
				has_law = law_type:law_state_religion
			}
			add = {
				desc = "br_impending_revolution_has_state_religion_loc"
				value = br_impending_revolution_has_state_religion_change_in_2de_estate_disatisfaction_value
			}
		}
		else_if = {
			limit = {
				has_law = law_type:law_freedom_of_conscience
			}
			add = {
				desc = "br_impending_revolution_has_freedom_of_conscience_loc"
				value = br_impending_revolution_has_freedom_of_conscience_change_in_2de_estate_disatisfaction_value
			}
		}
		else_if = {
			limit = {
				has_law = law_type:law_total_separation
			}
			add = {
				desc = "br_impending_revolution_has_total_separation_loc"
				value = br_impending_revolution_has_total_separation_change_in_2de_estate_disatisfaction_value
			}
		}
		else_if = {
			limit = {
				has_law = law_type:law_state_atheism
			}
			add = {
				desc = "br_impending_revolution_has_state_atheism_loc"
				value = br_impending_revolution_has_state_atheism_change_in_2de_estate_disatisfaction_value
			}
		}

		#Education laws effect
		if = {
			limit = {
				has_law = law_type:law_no_schools
			}
			add = {
				desc = "br_impending_revolution_has_no_schools_loc"
				value = br_impending_revolution_has_no_schools_change_in_2de_estate_disatisfaction_value
			}
		}
		else_if = {
			limit = {
				has_law = law_type:law_religious_schools
			}
			add = {
				desc = "br_impending_revolution_has_religious_schools_loc"
				value = br_impending_revolution_has_religious_schools_change_in_2de_estate_disatisfaction_value
			}
		}
		else_if = {
			limit = {
				has_law = law_type:law_private_schools
			}
			add = {
				desc = "br_impending_revolution_has_private_schools_loc"
				value = br_impending_revolution_has_private_schools_change_in_2de_estate_disatisfaction_value
			}
		}
		else_if = {
			limit = {
				has_law = law_type:law_public_schools
			}
			add = {
				desc = "br_impending_revolution_has_public_schools_loc"
				value = br_impending_revolution_has_public_schools_change_in_2de_estate_disatisfaction_value
			}
		}
	}
 }

  br_hre_impending_revolution_3de_estate_progress_bar = {
	name = "br_hre_impending_revolution_3de_estate_progress_bar"
	desc = "br_hre_impending_revolution_3de_estate_progress_bar_desc"

	default_bad = yes

	is_inverted = yes

	#For some reason I can't give it a scripted value or a variable
	start_value = 0 #br_hre_impending_revolution_3de_estate_progress_bar_start_value
	min_value = 0 #br_hre_impending_revolution_3de_estate_progress_bar_min_value
	max_value = 100 #br_hre_impending_revolution_3de_estate_progress_bar_max_value	#represents a percentage

	monthly_progress = {
		if = {
			limit = {
				radical_population_fraction >= br_impending_revolution_radicals_threshold
			}
			add = {
				desc = "br_impending_revolution_to_many_redicals_loc"
				value = br_impending_revolution_radicals_change_revoluion_progress_value
			}
		}
		if = {
			limit = {
				loyalist_fraction = {
					value >= br_impending_revolution_loyalist_threshold
				}
			}
			add = {
				desc = "br_impending_revolution_to_many_loyalists_loc"
				value = br_impending_revolution_loyalist_change_revoluion_progress_value
			}
		}

		
		#population_below_expected_sol

		# if = {
		# 	limit = {
		# 		any_scope_pop = {
		# 			food_security >= 0.5
		# 		}
		# 	}
		# 	trigger_event = {
		# 		id = hre_revolution_events.5
		# 		popup = yes
		# 	}
		# }

		#Monarchy popularity impact
		if = {
			limit = {
				has_variable = br_monarchy_popularity_var

				#only let monarchy popularity impact disatisfaction if it will decrease disatisfaction, because otherwise disatisfaction increases to fast
				var:br_monarchy_popularity_var >= 0
			}
			add = {
				desc = "br_impending_revolution_monarchy_popularity_revolution_progress_change_loc"
				value = var:br_monarchy_popularity_var
				multiply = -1 #invert the sign because pos popularity has the decrease revolution progress
				multiply = br_monarchy_popularity_to_3de_estate_disatisfaction_multiplier
			}
		}
		
		#Feudalism laws effect
		if = {
			limit = {
				has_law = law_type:br_law_feudalism_enforced
			}
			add = {
				desc = "br_impending_revolution_has_feudalism_enforced_loc"
				value = br_impending_revolution_has_feudalism_enforced_change_in_3de_estate_disatisfaction_value
			}
		}
		else_if = {
			limit = {
				has_law = law_type:br_law_feudalism_codified
			}
			add = {
				desc = "br_impending_revolution_has_feudalism_codified_loc"
				value = br_impending_revolution_has_feudalism_codified_change_in_3de_estate_disatisfaction_value
			}
		}
		else_if = {
			limit = {
				has_law = law_type:br_law_feudalism_not_enforced
			}
			add = {
				desc = "br_impending_revolution_has_feudalism_not_enforced_loc"
				value = br_impending_revolution_has_feudalism_not_enforced_change_in_3de_estate_disatisfaction_value
			}
		}
		else_if = {
			limit = {
				has_law = law_type:br_law_feudalism_affirmative_action
			}
			add = {
				desc = "br_impending_revolution_has_feudalism_affirmative_action_loc"
				value = br_impending_revolution_has_feudalism_affirmative_action_change_in_3de_estate_disatisfaction_value
			}
		}

		#Voting laws effects
		if = {
			limit = {
				has_law = law_type:law_wealth_voting
				has_law = law_type:law_census_voting
				has_law = law_type:law_universal_suffrage
			}
			add = {
				desc = "br_impending_revolution_has_a_law_that_allows_you_to_vote_loc"
				value = br_impending_revolution_has_a_law_that_allows_you_to_vote_change_in_3de_estate_disatisfaction_value
			}
		}

		#Bureaucracy laws effects
		if = {
			limit = {
				has_law = law_type:law_hereditary_bureaucrats
			}
			add = {
				desc = "br_impending_revolution_has_hereditary_bureaucrats_loc"
				value = br_impending_revolution_has_hereditary_bureaucrats_change_in_3de_estate_disatisfaction_value
			}
		}
		else_if = {
			limit = {
				has_law = law_type:law_appointed_bureaucrats
			}
			add = {
				desc = "br_impending_revolution_has_appointed_bureaucrats_loc"
				value = br_impending_revolution_has_appointed_bureaucrats_change_in_3de_estate_disatisfaction_value
			}
		}
		else_if = {
			limit = {
				has_law = law_type:law_elected_bureaucrats
			}
			add = {
				desc = "br_impending_revolution_has_elected_bureaucrats_loc"
				value = br_impending_revolution_has_elected_bureaucrats_change_in_3de_estate_disatisfaction_value
			}
		}
	}
 }

#  br_hre_revolution_progress_bar = {
# 	name = "br_hre_revolution_progress_bar"
# 	desc = "br_hre_revolution_progress_bar_desc"

# 	double_sided_gold = yes

# 	start_value = 0
# 	min_value = 0
# 	max_value = 100 #represents a percentage

# 	monthly_progress = {
# 		if = {
# 			limit = {
# 				radical_population_fraction >= br_impending_revolution_radicals_threshold
# 			}
# 			add = {
# 				desc = "br_impending_revolution_to_many_redicals_loc"
# 				value = br_impending_revolution_radicals_change_revoluion_progress_value
# 			}
# 		}
# 		if = {
# 			limit = {
# 				loyalist_fraction = {
# 					value >= br_impending_revolution_loyalist_threshold
# 				}
# 			}
# 			add = {
# 				desc = "br_impending_revolution_to_many_loyalists_loc"
# 				value = br_impending_revolution_loyalist_change_revoluion_progress_value
# 			}
# 		}
		
# 	}
#  }